---
# tasks file for ansible-role-pass

- include: packages-apt.yml
  when: ansible_pkg_mgr == 'apt'

- include: packages-yum.yml
  when: ansible_pkg_mgr == 'yum'

#- include: packages-dnf.yml
#  when: ansible_pkg_mgr == 'dnf'

- name: Set pass temporary location
  set_fact: pass_home={{ansible_env.HOME}}/.pass

- name: "ensure for ~/bin"
  set_fact: pass_home_bin={{ ansible_env.HOME }}/bin

- name: "Check value of pass_home"
  debug: var=pass_home

- name: Create directory
  file: path={{ pass_home }} state=directory

- name: Download pass
  get_url: url=http://git.zx2c4.com/password-store/snapshot/password-store-{{pass_version}}.tar.xz dest={{pass_home}}
  register: pass_downloaded

- name: Extract pass
  unarchive: src=~/.pass/password-store-{{pass_version}}.tar.xz dest={{pass_home}} copy=no
  when: pass_downloaded.changed

- name: Run make install
  command: make install chdir={{ pass_home }}/password-store-{{ pass_version }} creates=~/bin/pass
  become: yes

- shell: gpg2 --list-keys | grep pub | grep -o -P '(?<=/)[A-Z0-9]{8}'
  register: pass_gpg_key_id

- debug: var=pass_gpg_key_id.stdout

- name: Initialize pass
  command: pass init "{{ pass_gpg_key_id.stdout }}" creates=~/.password-store/

- name: Create git repository
  command: pass git init creates=~/.password-store/.git
  register: pass_git_init
  when: pass_git_remote is defined

- name: Get git remote
  command: git remote chdir=~/.password-store
  changed_when: False
  register: pass_remotes
  when: pass_git_remote is defined

- name: Add git remote
  command: git remote add origin {{pass_git_remote}} chdir=~/.password-store
  when: pass_git_remote is defined and not pass_remotes.stdout

##########################################
#
# using command module
#
- name: "command test-01 add or overwrite entry for Email/gmail.com"
  command: "pass generate Workstations/{{ ansible_hostname }}/admin 15"
  register: pass_generate_password

- name: "print test-01 value of pass_generate_password"
  debug: var=pass_generate_password

- name: "print test-01 value of pass_generate_password.stdout_lines"
  debug: var=pass_generate_password.stdout_lines

- name: "command test-01 output entry for Email/gmail.com"
  command: "pass Workstations/{{ ansible_hostname }}/admin 15"
  register: pass_password_output

- name: "print test-01 value of pass_generate_password.stdout_lines"
  debug: var=pass_password_output

# This gives us our current value for the password:

- name: "print test-01 value of pass_generate_password.stdout_lines"
  debug: var=pass_password_output.stdout

# Requires passlib

- name: "Change admin password"
  become: true
  user: name=tester update_password=always password="{{ pass_password_output.stdout|password_hash('sha512') }}"

#  user: name=tester update_password=always password="{{ 'passwordsaresecret'|password_hash('sha512') }}"
  

############################################3
#
# passwordstore.py


# Debug is used for examples, BAD IDEA to show passwords on screen
#- name: Basic lookup. Fails if example/test doesn't exist
#  debug: msg="{{ lookup('passwordstore', 'example/test')}}"

#- name: Create pass with random 16 character password. If password exists just give the password
#  debug: var=mypassword
#  vars:
#    mypassword: "{{ lookup('passwordstore', 'example/test-01')}}"


#- name: Create pass with random 16 character password. If password exists just give the password
#  debug: var=mypassword
#  vars:
#    mypassword: "{{ lookup('passwordstore', 'example/test-01 create=true')}}"

#- name: Different size password
#  debug: msg="{{ lookup('passwordstore', 'example/test-02 create=true length=42')}}"

#- name: Create pass with random 16 character password. If password exists just give the password
#  debug: var=pass_hosts_password
#  vars:
#    pass_hosts_password: "{{ lookup('password', '/tmp/{{ ansible_hostname }} chars=ascii_letters,digits,hexdigits,punctuation') }}"


